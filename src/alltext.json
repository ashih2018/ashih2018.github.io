{
  "summary": "I'm a software devevloper, a student, and a board game enthusiast born in Boston, Massachusetts. This year, I will be a third-year student studying at the University of Toronto majoring in computer science and minoring in statistics and economics. Currently, I am a software developer intern working for WatchGuard Technologies on DNSWatch!\n Besides studying and coding, I love playing volleyball, attempting to cook, speedcubing, going on walks with my dog and playing piano. As I mentioned before, I am also a huge board game addict, having spent over $400 on board games this past year (with my most recent puchase being Santorini in June). My personal favorites are Catan, One Night Ultimate Werewolf, and Codenames (although admittedtly I'm terrible at Codenames). I have also been trying to get back into chess after playing competitive chess from 5 years old to 10 years old. \nIf you feel like reaching out, I am always happy to meet new people! Get in contact with me with any of the platforms below!",
  "watchguard": "During the summer of 2020, I worked as a full stack software engineering intern at WatchGuard Technologies! I worked on DNSWatch, an application that protects clients from phishing attacks by blocking malicious DNS requests. \nDuring my time at WatchGuard, I implemented DNS over HTTPS blocking by writing Lua scripts and using the PowerDNS software to block outgoing DNS requests to DNS over HTTPS specific resolvers. Furthermore, I updated the DNSWatch client policies to have DNS over HTTPS blocking as an option and created a Vue application in the DNSWatch dashboard to display the number of DNS-over-HTTPS connections blocked.\nI also got to create a commenting feature which enabled WatchGuard analysts the ability to comment on domain analyses of infections reported from customers. This was a really cool experience because I got to work with Django's MVT, Model View Template, software design pattern which was slightly different than Ruby on Rails's MVC, Model View Controller, design pattern I've used working on Markus. To create this feature, I designed a new Comment model and made migrations to add this model to the database. Then I added logic to the views to save analyst comments to the database and displayed the comments through a Django template.\nOther notable tasks that I worked on included creating a REST API to evaluate the domain status of one or more domains passed to the DNSWatchGO Client through a POST request, creating a Vue application to display the resulting status of a policy, and updating the domain search feature in the DNSWatch dashboard to also display the results of a domain's CNAMEs and writing tests for this feature, which included mocking the properties of the Forcepoint database.",
  "uoft": "Since January 2019, I have been an open source software developer contributing to the development of Markus under Professor David Liu of the University of Toronto. Markus is a web application written in Ruby on Rails used by the University of Toronto as well as other universities for the submission and grading of student programming assignments.\n During this time, I have implemented brand new functionality for marking criterion, such that criterion based off of rubrics have an arbitrary number of levels, opposed to its previous five fixed levels. In the process of doing so, I created new models, generated database migrations, and wrote callbacks and validations to ensure that the criterion functionality work correctly.\nIn the winter of 2020, I refactored Markus's backend for criterion with Ruby on Rails's Single Table Inheritance feature. To do so, I created migrations to remove individual rubric, flexible, and checkbox criterion tables and created a single underlying criterion table from which the three criterion tables inherited from. As a result, I created migrations to make these changes, wrote callbacks and validations for the new criterion model, and refactored and simplified code in the models and controllers to use the new criterion table.",
  "mitre": "During the summer of 2019, I worked as a software engineering intern for Mitre Corporation. I helped develop Flux Notes, a web application written in React that helps clinicians collect oncology data. For the first half of this internship, I created an interactive table visualizer component that can view all labs/data collected at once. This table had features including highlighting data out of regular bounds, the ability to favorite certain labs/data such that favorited labs/data appear first, and saving the information in local storage. This table can be seen in fluxnotes.org/pilot1. My second task in my internship was implementing new features in the tablet scenario of Flux Notes to explore additional low burden approaches of capturing data. I implemented a button that when clicked, rendered the next patient and displayed their information on the page. I also implemented being able to view clinical notes through clicking keywords that related to structured data previously recorded by the clinician. These features can be viewed on fluxnotes.org/poc.\n During the summer of 2018, I also worked at Mitre Corporation as a software engineering intern. At this time, I worked with three other interns to create an airspace mapping web application with Javascript and Vue.js. I handled the user interface as well as the frontend logic to handle various user interactions."
}